name: release
on:
  push:
    branches:
      - main

# Declare default permissions as read only.
permissions: read-all

jobs:
  release:
    if: github.repository_owner == 'flutter'
    name: release
    permissions:
      # Release needs to push a tag back to the repo.
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: "Install Flutter"
      # Github Actions don't support templates so it is hard to share this snippet with another action
      # If we eventually need to use this in more workflow, we could create a shell script that contains this
      # snippet.
      run: |
        cd $HOME
        git clone https://github.com/flutter/flutter.git --depth 1 -b stable _flutter
        echo "$HOME/_flutter/bin" >> $GITHUB_PATH
        cd $GITHUB_WORKSPACE
    # Checks out a copy of the repo.
    - name: Check out code
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      with:
        fetch-depth: 0 # Fetch all history so the tool can get all the tags to determine version.
    - name: Set up tools
      run: dart pub global activate flutter_plugin_tools 0.13.4+3

    # This workflow should be the last to run. So wait for all the other tests to succeed.
    - name: Wait on all tests
      uses: lewagon/wait-on-check-action@3a563271c3f8d1611ed7352809303617ee7e54ac
      with:
        ref: ${{ github.sha }}
        running-workflow-name: 'release'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 180 # seconds
        allowed-conclusions: success,neutral
        # verbose:true will produce too many logs that hang github actions web UI.
        verbose: false

    - name: run release
      run: |
        git config --global user.name ${{ secrets.USER_NAME }}
        git config --global user.email ${{ secrets.USER_EMAIL }}
        dart pub global run flutter_plugin_tools publish --all-changed --base-sha=HEAD~ --skip-confirmation --remote=origin
      env: {PUB_CREDENTIALS: "${{ secrets.PUB_CREDENTIALS }}"}
