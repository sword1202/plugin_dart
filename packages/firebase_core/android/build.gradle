def PLUGIN = "firebase_core";
def ANDROIDX_WARNING = "flutterPluginsAndroidXWarning";
gradle.buildFinished { buildResult ->
    if (buildResult.failure && !rootProject.ext.has(ANDROIDX_WARNING)) {
        println '         *********************************************************'
        println 'WARNING: This version of ' + PLUGIN + ' will break your Android build if it or its dependencies aren\'t compatible with AndroidX.'
        println '         See https://goo.gl/CP92wY for more information on the problem and how to fix it.'
        println '         This warning prints for all Android build failures. The real root cause of the error may be unrelated.'
        println '         *********************************************************'
        rootProject.ext.set(ANDROIDX_WARNING, true);
    }
}

group 'io.flutter.plugins.firebase.core'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.0'
    }
}

rootProject.allprojects {
    repositories {
        google()
        jcenter()
    }
}

apply plugin: 'com.android.library'

/**
 * Get the current version of the plugin from the plugin's pubspec.yaml file.
 *
 * @return String representing version of the plugin.
 */
def flutterFireVersion() {
    File pubspec = new File('../../pubspec.yaml')
    def lines = pubspec.readLines()
    for (line in lines) {
        if (line.contains('version: ')) {
            return "${line}".substring(9).trim()
        }
    }
    throw new Exception('Version not found in pubspec.yaml file.')
}

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionName flutterFireVersion()
    }
    lintOptions {
        disable 'InvalidPackage'
    }
    dependencies {
        api 'com.google.firebase:firebase-core:16.0.9'
        implementation 'com.google.firebase:firebase-common:16.1.0'
    }
}
